import math
import json
import random


def wind_speed_to_beaufort(wind_speed_ms):
    if wind_speed_ms < 0:
        raise ValueError("Wind speed cannot be negative")
    if wind_speed_ms < 0.3:
        return 0
    elif wind_speed_ms < 1.6:
        return 1
    elif wind_speed_ms < 3.4:
        return 2
    elif wind_speed_ms < 5.5:
        return 3
    elif wind_speed_ms < 8.0:
        return 4
    elif wind_speed_ms < 10.8:
        return 5
    elif wind_speed_ms < 13.9:
        return 6
    elif wind_speed_ms < 17.2:
        return 7
    elif wind_speed_ms < 20.8:
        return 8
    elif wind_speed_ms < 24.5:
        return 9
    elif wind_speed_ms < 28.5:
        return 10
    elif wind_speed_ms < 32.7:
        return 11
    else:
        return 12
    

def get_random_wave_height(beaufort_scale):
    wave_height_ranges = {
        0: (0, 0),
        1: (0.1, 0.2),
        2: (0.2, 0.5),
        3: (0.5, 1.25),
        4: (1.25, 2.5),
        5: (2.5, 4),
        6: (4, 6),
        7: (6, 9),
        8: (9, 12.5),
        9: (12.5, 16),
        10: (16, 20),
        11: (20, 25),
        12: (25, 30)  # For simplicity, we cap the upper range of hurricanes at 30 m.
    }
    
    if beaufort_scale not in wave_height_ranges:
        raise ValueError("Invalid Beaufort scale value. It must be between 0 and 12.")
    
    min_height, max_height = wave_height_ranges[beaufort_scale]
    return random.uniform(min_height, max_height)


def haversine(lat1, lon1, lat2, lon2):
    R = 6371.0  # Earth radius in kilometers
    dlat = math.radians(lat2 - lat1)
    dlon = math.radians(lon2 - lon1)
    a = math.sin(dlat / 2)**2 + math.cos(math.radians(lat1)) * math.cos(math.radians(lat2)) * math.sin(dlon / 2)**2
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))
    return R * c  # Distance in kilometers


def change_data(data, points: list[tuple[float, float]], new_wind_speed_ms):
    for point_k, point_v in data.items():
        lat, lon = list(map(lambda x: float(x), point_k.split(", ")))
        for chosen_point in points:
            if haversine(lat, lon, chosen_point[0], chosen_point[1]) < 50:
                for timestamp_key, timestamp_value in point_v.items():
                    if timestamp_key == "is_water":
                        continue
                    wind_speed_ms = max(0, random.uniform(new_wind_speed_ms - 2, new_wind_speed_ms + 1))
                    wind_speed_km = wind_speed_ms * 3.6
                    wave_height = get_random_wave_height(wind_speed_to_beaufort(wind_speed_ms))
                    print(wind_speed_km)
                    timestamp_value["wind_speed_10m"] = wind_speed_km
                    timestamp_value["wave_height"] = wave_height
                break
    return data



if __name__ == "__main__":
    input_file = "src/main/resources/weather-data-path.json"
    output_file = "src/main/resources/weather-data-path-created-2.json"

    with open(input_file) as file:
        data = json.loads(file.read())

    points = [
        (41.07998078139605, -46.19523466701354),
        (41.27916252020979, -45.145003680541116),
        (41.65941856703601, -44.13098755567118),
        (41.85860030584975, -43.098864000000006),
        (41.8404928750485, -42.030525582726334),
        (42.05778204466348, -41.0527243194589),
        (41.89481516745224, -39.98438590218523),
        (42.07588947546473, -38.98847720811656),
        (42.27507121427847, -37.95635365244538),
        (42.29317864507971, -36.94233752757545),
        (42.23885635267597, -35.85589167950053),
        (42.25696378347722, -34.914305277835595),
        (42.4380380914897, -33.86407429136317),
        (42.67343469190594, -32.813843304890746),
        (43.07179816953341, -31.745504887617074),
        (42.890723861520925, -30.749596193548395),
        (42.90883129232217, -29.71747263787722),
        (42.890723861520925, -28.649134220603543),
        (42.69154212270718, -27.635118095733617),
        (42.546682676297195, -26.60299454006244),
        (42.5104678146947, -25.64330070759626),
        (42.32939350668221, -24.62928458272633),
        (42.28907299407743, -35.93110716129033),
        (42.41861076827098, -34.89480496774194),
        (42.504969284400005, -33.81532351612904)
    ]

    points_2 = [
        (43.67080925214194, -46.164591322580655),
        (43.84352628440001, -45.2146476451613),
        (43.92988480052904, -44.09198693548388),
        (44.01624331665808, -43.012505483870974),
        (43.886705542464526, -42.01938254838711),
        (43.757167768270975, -40.9399010967742),
        (43.84352628440001, -39.989957419354845),
        (43.84352628440001, -38.867296709677426),
        (43.800347026335494, -37.96053229032259),
        (43.84352628440001, -36.9242300967742),
        (43.84352628440001, -35.80156938709678),
        (43.757167768270975, -34.76526719354839),
        (43.5412714779484, -33.77214425806452),
        (43.5412714779484, -32.822200580645166),
        (43.58445073601291, -31.78589838709678),
        (43.67080925214194, -30.79277545161291),
        (43.368554445690336, -29.713294000000005),
        (43.0231203811742, -28.676991806451618),
        (42.72086557472259, -27.727048129032262),
        (42.591327800529044, -26.690745935483875),
        (42.28907299407743, -25.697623000000007),
        (42.07317670375485, -24.6181415483871),
        (41.81410115536775, -23.668197870967745)
    ]

    points_3 = [
        (43.886705542464526, -47.287252032258074),
        (43.92988480052904, -46.164591322580655),
        (43.97306405859356, -45.25782690322581),
        (44.14578109085162, -44.221524709677425),
        (44.1026018327871, -43.012505483870974),
        (44.1026018327871, -42.14892032258065),
        (43.886705542464526, -41.02625961290323),
        (43.71398851020646, -40.033136677419364),
        (43.800347026335494, -38.95365522580646),
        (43.92988480052904, -37.87417377419355),
        (43.84352628440001, -36.9242300967742),
        (43.84352628440001, -35.93110716129033),
        (43.757167768270975, -34.80844645161291),
        (43.757167768270975, -33.944861290322585),
        (43.71398851020646, -32.692662806451615),
        (43.49809221988388, -31.699539870967747),
        (43.109478897303234, -30.62005841935484),
        (42.93676186504517, -29.583756225806454),
        (42.634507058593556, -28.633812548387098),
        (42.67768631665807, -27.59751035483871),
        (42.591327800529044, -26.647566677419363),
        (42.46179002633549, -25.568085225806456),
        (42.15953521988388, -24.66132080645162),
        (42.07317670375485, -23.581839354838714)
    ]

    points_4 = [
        (42.41861076827098, -48.36673348387097),
        (42.504969284400005, -47.244072774193555),
        (42.591327800529044, -46.33730835483872),
        (42.504969284400005, -45.25782690322581),
        (42.46179002633549, -44.17834545161291),
        (42.41861076827098, -43.098864000000006),
        (42.548148542464524, -42.10574106451614),
        (42.41861076827098, -41.11261812903226),
        (42.37543151020646, -40.076315935483876),
        (42.41861076827098, -38.99683448387098),
        (42.28907299407743, -37.96053229032259),
        (42.33225225214194, -36.967409354838715),
        (42.24589373601291, -35.887927903225815),
        (42.20271447794839, -34.93798422580646),
        (42.20271447794839, -33.77214425806452),
        (42.02999744569033, -32.779021322580654),
        (42.02999744569033, -31.8290776451613),
        (41.9436389295613, -30.70641693548388),
        (41.90045967149678, -29.756473258064524),
        (41.72774263923871, -28.720171064516137),
        (41.64138412310969, -27.727048129032262),
        (41.51184634891614, -26.647566677419363),
        (41.339129316658074, -25.74080225806452)
    ]

    path_data = change_data(data, points_4, 10)

    with open(output_file, 'w') as file:
        json.dump(path_data, file)